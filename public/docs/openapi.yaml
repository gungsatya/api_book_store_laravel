openapi: 3.0.3
info:
  title: 'Book Store API Documentation'
  description: 'This API for educational purpose with study case book store. Created by Satya Wibawa.'
  version: 1.0.0
servers:
  -
    url: 'http://api_book_store_laravel.test'
paths:
  /api/v1/authors:
    get:
      summary: 'Author collections'
      operationId: authorCollections
      description: 'Get a list of authors.'
      parameters:
        -
          in: query
          name: q
          description: 'Searching keyword of the collection.'
          example: Eileen
          required: false
          schema:
            type: string
            description: 'Searching keyword of the collection.'
            example: Eileen
        -
          in: query
          name: pageSize
          description: 'Count of items per page. Allowed size 10, 25, 50, 100. Default 10.'
          example: 10
          required: false
          schema:
            type: integer
            description: 'Count of items per page. Allowed size 10, 25, 50, 100. Default 10.'
            example: 10
        -
          in: query
          name: page
          description: 'Page index to view.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page index to view.'
            example: 1
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  authors:
                    -
                      id: 2
                      name: 'Eileen Murazik'
                      dob: '2019-10-29'
                      description: 'Qui illo quia molestias natus. Labore maiores tempora harum. Ut dolor doloribus consequatur omnis sit perspiciatis. Nihil dolorem ut nihil impedit.'
                      created_at: '2023-02-23T09:43:03.000000Z'
                      updated_at: '2023-02-23T09:43:03.000000Z'
                  links:
                    first: 'http://127.0.0.1:8000/api/v1/authors?page=1'
                    last: 'http://127.0.0.1:8000/api/v1/authors?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://127.0.0.1:8000/api/v1/authors?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://127.0.0.1:8000/api/v1/authors'
                    per_page: 10
                    to: 1
                    total: 1
                  message: 'Success to get author collection'
                properties:
                  authors:
                    type: array
                    example:
                      -
                        id: 2
                        name: 'Eileen Murazik'
                        dob: '2019-10-29'
                        description: 'Qui illo quia molestias natus. Labore maiores tempora harum. Ut dolor doloribus consequatur omnis sit perspiciatis. Nihil dolorem ut nihil impedit.'
                        created_at: '2023-02-23T09:43:03.000000Z'
                        updated_at: '2023-02-23T09:43:03.000000Z'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 2
                        name:
                          type: string
                          example: 'Eileen Murazik'
                        dob:
                          type: string
                          example: '2019-10-29'
                        description:
                          type: string
                          example: 'Qui illo quia molestias natus. Labore maiores tempora harum. Ut dolor doloribus consequatur omnis sit perspiciatis. Nihil dolorem ut nihil impedit.'
                        created_at:
                          type: string
                          example: '2023-02-23T09:43:03.000000Z'
                        updated_at:
                          type: string
                          example: '2023-02-23T09:43:03.000000Z'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://127.0.0.1:8000/api/v1/authors?page=1'
                      last:
                        type: string
                        example: 'http://127.0.0.1:8000/api/v1/authors?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://127.0.0.1:8000/api/v1/authors?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://127.0.0.1:8000/api/v1/authors'
                      per_page:
                        type: integer
                        example: 10
                      to:
                        type: integer
                        example: 1
                      total:
                        type: integer
                        example: 1
                  message:
                    type: string
                    example: 'Success to get author collection'
      tags:
        - 'Author Management'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                pageSize:
                  type: integer
                  description: 'Count of items per page. Allowed size 10, 25, 50, 100. Default 10.'
                  example: 10
                q:
                  type: string
                  description: 'Searching keyword of the collection.'
                  example: Eileen
      security: []
    post:
      summary: 'Store a new author'
      operationId: storeANewAuthor
      description: 'Store a newly created author data in database storage.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  author:
                    id: 13
                    name: 'Robert P.'
                    dob: '1960-12-23'
                    description: 'this is dummy data'
                    created_at: '2023-02-24T03:06:51.000000Z'
                    updated_at: '2023-02-24T03:06:51.000000Z'
                  message: 'Author has been saved.'
                properties:
                  author:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 13
                      name:
                        type: string
                        example: 'Robert P.'
                      dob:
                        type: string
                        example: '1960-12-23'
                      description:
                        type: string
                        example: 'this is dummy data'
                      created_at:
                        type: string
                        example: '2023-02-24T03:06:51.000000Z'
                      updated_at:
                        type: string
                        example: '2023-02-24T03:06:51.000000Z'
                  message:
                    type: string
                    example: 'Author has been saved.'
      tags:
        - 'Author Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Name of the author.'
                  example: 'Robert P.'
                dob:
                  type: date
                  description: "Author's date of birth with format Y-m-d."
                  example: '1960-12-23'
                description:
                  type: string
                  description: 'Description of the author.'
                  example: 'this is dummy data'
              required:
                - name
                - dob
      security: []
  '/api/v1/authors/{id}':
    get:
      summary: 'Show author data'
      operationId: showAuthorData
      description: 'Display detail data of the author'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  author:
                    id: 4
                    name: 'Micah Bernier'
                    dob: '1992-03-23'
                    description: 'Nobis excepturi quasi vel aut est iusto est ut. Sit autem minus ratione hic nam.'
                    created_at: '2023-02-24T03:39:52.000000Z'
                    updated_at: '2023-02-24T03:39:52.000000Z'
                  message: 'Success to get author data'
                properties:
                  author:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 4
                      name:
                        type: string
                        example: 'Micah Bernier'
                      dob:
                        type: string
                        example: '1992-03-23'
                      description:
                        type: string
                        example: 'Nobis excepturi quasi vel aut est iusto est ut. Sit autem minus ratione hic nam.'
                      created_at:
                        type: string
                        example: '2023-02-24T03:39:52.000000Z'
                      updated_at:
                        type: string
                        example: '2023-02-24T03:39:52.000000Z'
                  message:
                    type: string
                    example: 'Success to get author data'
      tags:
        - 'Author Management'
      security: []
    put:
      summary: 'Update author data'
      operationId: updateAuthorData
      description: 'Update the specified author data in database.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  author:
                    id: 2
                    name: 'Robert P.'
                    dob: '1960-12-23'
                    description: 'This is my new dummy description'
                    created_at: '2023-02-24T03:06:51.000000Z'
                    updated_at: '2023-02-24T03:06:51.000000Z'
                  message: 'Author has been saved.'
                properties:
                  author:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 2
                      name:
                        type: string
                        example: 'Robert P.'
                      dob:
                        type: string
                        example: '1960-12-23'
                      description:
                        type: string
                        example: 'This is my new dummy description'
                      created_at:
                        type: string
                        example: '2023-02-24T03:06:51.000000Z'
                      updated_at:
                        type: string
                        example: '2023-02-24T03:06:51.000000Z'
                  message:
                    type: string
                    example: 'Author has been saved.'
      tags:
        - 'Author Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Name of the author.'
                  example: 'Robert P.'
                dob:
                  type: date
                  description: "Author's date of birth with format Y-m-d."
                  example: '1960-12-23'
                description:
                  type: string
                  description: 'Description of the author.'
                  example: 'This is my new dummy description'
              required:
                - name
                - dob
      security: []
    delete:
      summary: 'Remove author data'
      operationId: removeAuthorData
      description: 'Remove the specified resource from storage.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  author:
                    id: 2
                    name: 'Robert P.'
                    dob: '1960-12-23'
                    description: 'This is my new dummy description'
                    created_at: '2023-02-24T03:06:51.000000Z'
                    updated_at: '2023-02-24T03:06:51.000000Z'
                  message: 'Author has been deleted.'
                properties:
                  author:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 2
                      name:
                        type: string
                        example: 'Robert P.'
                      dob:
                        type: string
                        example: '1960-12-23'
                      description:
                        type: string
                        example: 'This is my new dummy description'
                      created_at:
                        type: string
                        example: '2023-02-24T03:06:51.000000Z'
                      updated_at:
                        type: string
                        example: '2023-02-24T03:06:51.000000Z'
                  message:
                    type: string
                    example: 'Author has been deleted.'
      tags:
        - 'Author Management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Author ID.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/books:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The page size value is not allowed. (Allowed: [10, 25, 50, 100])'
                  errors:
                    pageSize:
                      - 'The page size value is not allowed. (Allowed: [10, 25, 50, 100])'
                properties:
                  message:
                    type: string
                    example: 'The page size value is not allowed. (Allowed: [10, 25, 50, 100])'
                  errors:
                    type: object
                    properties:
                      pageSize:
                        type: array
                        example:
                          - 'The page size value is not allowed. (Allowed: [10, 25, 50, 100])'
                        items:
                          type: string
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                pageSize:
                  type: number
                  description: ''
                  example: 388.432
                q:
                  type: string
                  description: ''
                  example: aspernatur
                tag_ids:
                  type: string
                  description: ''
                  example: excepturi
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                author_id:
                  type: number
                  description: ''
                  example: 13793776.53656
                title:
                  type: string
                  description: ''
                  example: et
                description:
                  type: string
                  description: ''
                  example: 'Est tempore aut voluptatem deleniti.'
                price:
                  type: number
                  description: ''
                  example: 71.547
                release_date:
                  type: string
                  description: 'Must be a valid date. Must be a valid date in the format <code>Y-m-d</code>.'
                  example: '2023-02-24'
                cover_image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                tag_ids:
                  type: array
                  description: ''
                  example:
                    - 73.3
                  items:
                    type: number
              required:
                - author_id
                - title
                - price
                - release_date
      security: []
  '/api/v1/books/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\Book] 6'
                  exception: Symfony\Component\HttpKernel\Exception\NotFoundHttpException
                  file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Foundation\Exceptions\Handler.php'
                  line: 391
                  trace:
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Foundation\Exceptions\Handler.php'
                      line: 367
                      function: prepareException
                      class: Illuminate\Foundation\Exceptions\Handler
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\nunomaduro\collision\src\Adapters\Laravel\ExceptionHandler.php'
                      line: 54
                      function: render
                      class: Illuminate\Foundation\Exceptions\Handler
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Routing\Pipeline.php'
                      line: 51
                      function: render
                      class: NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 185
                      function: handleException
                      class: Illuminate\Routing\Pipeline
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php'
                      line: 126
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php'
                      line: 102
                      function: handleRequest
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php'
                      line: 54
                      function: handleRequestUsingNamedLimiter
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 180
                      function: handle
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\sanctum\src\Http\Middleware\EnsureFrontendRequestsAreStateful.php'
                      line: 33
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 141
                      function: 'Laravel\Sanctum\Http\Middleware\{closure}'
                      class: Laravel\Sanctum\Http\Middleware\EnsureFrontendRequestsAreStateful
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 116
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\sanctum\src\Http\Middleware\EnsureFrontendRequestsAreStateful.php'
                      line: 34
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 180
                      function: handle
                      class: Laravel\Sanctum\Http\Middleware\EnsureFrontendRequestsAreStateful
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 116
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 799
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 776
                      function: runRouteWithinStack
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 740
                      function: runRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 729
                      function: dispatchToRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 190
                      function: dispatch
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 141
                      function: 'Illuminate\Foundation\Http\{closure}'
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                      line: 31
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                      line: 40
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TrimStrings
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ValidatePostSize.php'
                      line: 27
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ValidatePostSize
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                      line: 86
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Http\Middleware\HandleCors.php'
                      line: 62
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 180
                      function: handle
                      class: Illuminate\Http\Middleware\HandleCors
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                      line: 39
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 180
                      function: handle
                      class: Illuminate\Http\Middleware\TrustProxies
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 116
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 165
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 134
                      function: sendRequestThroughRouter
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 299
                      function: handle
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 287
                      function: callLaravelOrLumenRoute
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 92
                      function: makeApiCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 45
                      function: makeResponseCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 35
                      function: makeResponseCallIfConditionsPass
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 209
                      function: __invoke
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 166
                      function: iterateThroughStrategies
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 95
                      function: fetchResponses
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 124
                      function: processRoute
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 71
                      function: extractEndpointsInfoFromLaravelApp
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 49
                      function: extractEndpointsInfoAndWriteToDisk
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                      line: 51
                      function: get
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 36
                      function: handle
                      class: Knuckles\Scribe\Commands\GenerateDocumentation
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                      line: 41
                      function: 'Illuminate\Container\{closure}'
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 93
                      function: unwrapIfClosure
                      class: Illuminate\Container\Util
                      type: '::'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 37
                      function: callBoundMethod
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 661
                      function: call
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 183
                      function: call
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\symfony\console\Command\Command.php'
                      line: 312
                      function: execute
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 153
                      function: run
                      class: Symfony\Component\Console\Command\Command
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\symfony\console\Application.php'
                      line: 1022
                      function: run
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\symfony\console\Application.php'
                      line: 314
                      function: doRunCommand
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\symfony\console\Application.php'
                      line: 168
                      function: doRun
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Console\Application.php'
                      line: 102
                      function: run
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                      line: 155
                      function: run
                      class: Illuminate\Console\Application
                      type: '->'
                    -
                      file: 'D:\Projects\book-store\api_book_store_laravel\artisan'
                      line: 37
                      function: handle
                      class: Illuminate\Foundation\Console\Kernel
                      type: '->'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\Book] 6'
                  exception:
                    type: string
                    example: Symfony\Component\HttpKernel\Exception\NotFoundHttpException
                  file:
                    type: string
                    example: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Foundation\Exceptions\Handler.php'
                  line:
                    type: integer
                    example: 391
                  trace:
                    type: array
                    example:
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Foundation\Exceptions\Handler.php'
                        line: 367
                        function: prepareException
                        class: Illuminate\Foundation\Exceptions\Handler
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\nunomaduro\collision\src\Adapters\Laravel\ExceptionHandler.php'
                        line: 54
                        function: render
                        class: Illuminate\Foundation\Exceptions\Handler
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Routing\Pipeline.php'
                        line: 51
                        function: render
                        class: NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 185
                        function: handleException
                        class: Illuminate\Routing\Pipeline
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php'
                        line: 126
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php'
                        line: 102
                        function: handleRequest
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php'
                        line: 54
                        function: handleRequestUsingNamedLimiter
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 180
                        function: handle
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\sanctum\src\Http\Middleware\EnsureFrontendRequestsAreStateful.php'
                        line: 33
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 141
                        function: 'Laravel\Sanctum\Http\Middleware\{closure}'
                        class: Laravel\Sanctum\Http\Middleware\EnsureFrontendRequestsAreStateful
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 116
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\sanctum\src\Http\Middleware\EnsureFrontendRequestsAreStateful.php'
                        line: 34
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 180
                        function: handle
                        class: Laravel\Sanctum\Http\Middleware\EnsureFrontendRequestsAreStateful
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 116
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 799
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 776
                        function: runRouteWithinStack
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 740
                        function: runRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 729
                        function: dispatchToRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 190
                        function: dispatch
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 141
                        function: 'Illuminate\Foundation\Http\{closure}'
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                        line: 31
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                        line: 40
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TrimStrings
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ValidatePostSize.php'
                        line: 27
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ValidatePostSize
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                        line: 86
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Http\Middleware\HandleCors.php'
                        line: 62
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 180
                        function: handle
                        class: Illuminate\Http\Middleware\HandleCors
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                        line: 39
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 180
                        function: handle
                        class: Illuminate\Http\Middleware\TrustProxies
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 116
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 165
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 134
                        function: sendRequestThroughRouter
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 299
                        function: handle
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 287
                        function: callLaravelOrLumenRoute
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 92
                        function: makeApiCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 45
                        function: makeResponseCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 35
                        function: makeResponseCallIfConditionsPass
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 209
                        function: __invoke
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 166
                        function: iterateThroughStrategies
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 95
                        function: fetchResponses
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 124
                        function: processRoute
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 71
                        function: extractEndpointsInfoFromLaravelApp
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 49
                        function: extractEndpointsInfoAndWriteToDisk
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                        line: 51
                        function: get
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 36
                        function: handle
                        class: Knuckles\Scribe\Commands\GenerateDocumentation
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                        line: 41
                        function: 'Illuminate\Container\{closure}'
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 93
                        function: unwrapIfClosure
                        class: Illuminate\Container\Util
                        type: '::'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 37
                        function: callBoundMethod
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 661
                        function: call
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 183
                        function: call
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\symfony\console\Command\Command.php'
                        line: 312
                        function: execute
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 153
                        function: run
                        class: Symfony\Component\Console\Command\Command
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\symfony\console\Application.php'
                        line: 1022
                        function: run
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\symfony\console\Application.php'
                        line: 314
                        function: doRunCommand
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\symfony\console\Application.php'
                        line: 168
                        function: doRun
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Console\Application.php'
                        line: 102
                        function: run
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                        line: 155
                        function: run
                        class: Illuminate\Console\Application
                        type: '->'
                      -
                        file: 'D:\Projects\book-store\api_book_store_laravel\artisan'
                        line: 37
                        function: handle
                        class: Illuminate\Foundation\Console\Kernel
                        type: '->'
                    items:
                      type: object
                      properties:
                        file:
                          type: string
                          example: 'D:\Projects\book-store\api_book_store_laravel\vendor\laravel\framework\src\Illuminate\Foundation\Exceptions\Handler.php'
                        line:
                          type: integer
                          example: 367
                        function:
                          type: string
                          example: prepareException
                        class:
                          type: string
                          example: Illuminate\Foundation\Exceptions\Handler
                        type:
                          type: string
                          example: '->'
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                author_id:
                  type: number
                  description: ''
                  example: 20.271950904
                title:
                  type: string
                  description: ''
                  example: nobis
                description:
                  type: string
                  description: ''
                  example: 'Debitis laborum sed minus doloremque iure consequuntur non.'
                price:
                  type: number
                  description: ''
                  example: 501.0
                release_date:
                  type: string
                  description: 'Must be a valid date. Must be a valid date in the format <code>Y-m-d</code>.'
                  example: '2023-02-24'
                cover_image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                tag_ids:
                  type: array
                  description: ''
                  example:
                    - 577471.50746626
                  items:
                    type: number
              required:
                - author_id
                - title
                - price
                - release_date
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the book.'
        example: 6
        required: true
        schema:
          type: integer
  /api/v1/tags:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  tags: []
                  links:
                    first: 'http://api_book_store_laravel.test/api/v1/tags?page=1'
                    last: 'http://api_book_store_laravel.test/api/v1/tags?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: null
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://api_book_store_laravel.test/api/v1/tags?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://api_book_store_laravel.test/api/v1/tags'
                    per_page: 50
                    to: null
                    total: 0
                  message: 'Success to get tag collection'
                properties:
                  tags:
                    type: array
                    example: []
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://api_book_store_laravel.test/api/v1/tags?page=1'
                      last:
                        type: string
                        example: 'http://api_book_store_laravel.test/api/v1/tags?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: string
                        example: null
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://api_book_store_laravel.test/api/v1/tags?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://api_book_store_laravel.test/api/v1/tags'
                      per_page:
                        type: integer
                        example: 50
                      to:
                        type: string
                        example: null
                      total:
                        type: integer
                        example: 0
                  message:
                    type: string
                    example: 'Success to get tag collection'
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                pageSize:
                  type: integer
                  description: 'Must be one of <code>10</code>, <code>25</code>, <code>50</code>, or <code>100</code>.'
                  example: '50'
                q:
                  type: string
                  description: ''
                  example: ex
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: est
              required:
                - name
      security: []
  '/api/v1/tags/{id}':
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the tag.'
        example: 14
        required: true
        schema:
          type: integer
tags:
  -
    name: 'Author Management'
    description: "\nAPI collection to manage authors data."
  -
    name: Endpoints
    description: ''
