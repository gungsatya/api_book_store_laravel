name: 'Author Management'
description: |-

  API collection to manage authors data.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/authors
    metadata:
      groupName: 'Author Management'
      groupDescription: |-

        API collection to manage authors data.
      subgroup: ''
      subgroupDescription: ''
      title: 'Author collections'
      description: 'Get a list of authors.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      q:
        name: q
        description: 'Searching keyword of the collection.'
        required: false
        example: Eileen
        type: string
        custom: []
      pageSize:
        name: pageSize
        description: 'Count of items per page. Allowed size 10, 25, 50, 100. Default 10.'
        required: false
        example: 10
        type: integer
        custom: []
      page:
        name: page
        description: 'Page index to view.'
        required: false
        example: 1
        type: integer
        custom: []
    cleanQueryParameters:
      q: Eileen
      pageSize: 10
      page: 1
    bodyParameters:
      pageSize:
        name: pageSize
        description: 'Count of items per page. Allowed size 10, 25, 50, 100. Default 10.'
        required: false
        example: 10
        type: integer
        custom: []
      q:
        name: q
        description: 'Searching keyword of the collection.'
        required: false
        example: Eileen
        type: string
        custom: []
    cleanBodyParameters:
      pageSize: 10
      q: Eileen
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "authors": [
               {
                   "id": 2,
                   "name": "Eileen Murazik",
                   "dob": "2019-10-29",
                   "description": "Qui illo quia molestias natus. Labore maiores tempora harum. Ut dolor doloribus consequatur omnis sit perspiciatis. Nihil dolorem ut nihil impedit.",
                   "created_at": "2023-02-23T09:43:03.000000Z",
                   "updated_at": "2023-02-23T09:43:03.000000Z"
               }
               ],
           "links": {
               "first": "http://127.0.0.1:8000/api/v1/authors?page=1",
               "last": "http://127.0.0.1:8000/api/v1/authors?page=1",
               "prev": null,
               "next": null
           },
           "meta": {
               "current_page": 1,
               "from": 1,
               "last_page": 1,
               "links": [
               {
                   "url": null,
                   "label": "&laquo; Previous",
                   "active": false
               },
               {
                   "url": "http://127.0.0.1:8000/api/v1/authors?page=1",
                   "label": "1",
                   "active": true
               },
               {
                   "url": null,
                   "label": "Next &raquo;",
                   "active": false
               }
           ],
           "path": "http://127.0.0.1:8000/api/v1/authors",
           "per_page": 10,
           "to": 1,
           "total": 1
           },
           "message": "Success to get author collection"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/authors
    metadata:
      groupName: 'Author Management'
      groupDescription: |-

        API collection to manage authors data.
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a new author'
      description: 'Store a newly created author data in database storage.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the author.'
        required: true
        example: 'Robert P.'
        type: string
        custom: []
      dob:
        name: dob
        description: "Author's date of birth with format Y-m-d."
        required: true
        example: '1960-12-23'
        type: date
        custom: []
      description:
        name: description
        description: 'Description of the author.'
        required: false
        example: 'this is dummy data'
        type: string
        custom: []
    cleanBodyParameters:
      name: 'Robert P.'
      dob: '1960-12-23'
      description: 'this is dummy data'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
               "author": {
                   "id": 13,
                   "name": "Robert P.",
                   "dob": "1960-12-23",
                   "description": "this is dummy data",
                   "created_at": "2023-02-24T03:06:51.000000Z",
                   "updated_at": "2023-02-24T03:06:51.000000Z"
               },
               "message": "Author has been saved."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/authors/{id}'
    metadata:
      groupName: 'Author Management'
      groupDescription: |-

        API collection to manage authors data.
      subgroup: ''
      subgroupDescription: ''
      title: 'Show author data'
      description: 'Display detail data of the author'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'Author ID.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"author":{"id":4,"name":"Micah Bernier","dob":"1992-03-23","description":"Nobis excepturi quasi vel aut est iusto est ut. Sit autem minus ratione hic nam.","created_at":"2023-02-24T03:39:52.000000Z","updated_at":"2023-02-24T03:39:52.000000Z"},"message":"Success to get author data"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/authors/{id}'
    metadata:
      groupName: 'Author Management'
      groupDescription: |-

        API collection to manage authors data.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update author data'
      description: 'Update the specified author data in database.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'Author ID.'
        required: true
        example: 2
        type: integer
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the author.'
        required: true
        example: 'Robert P.'
        type: string
        custom: []
      dob:
        name: dob
        description: "Author's date of birth with format Y-m-d."
        required: true
        example: '1960-12-23'
        type: date
        custom: []
      description:
        name: description
        description: 'Description of the author.'
        required: false
        example: 'This is my new dummy description'
        type: string
        custom: []
    cleanBodyParameters:
      name: 'Robert P.'
      dob: '1960-12-23'
      description: 'This is my new dummy description'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
               "author": {
                   "id": 2,
                   "name": "Robert P.",
                   "dob": "1960-12-23",
                   "description": "This is my new dummy description",
                   "created_at": "2023-02-24T03:06:51.000000Z",
                   "updated_at": "2023-02-24T03:06:51.000000Z"
               },
               "message": "Author has been saved."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/authors/{id}'
    metadata:
      groupName: 'Author Management'
      groupDescription: |-

        API collection to manage authors data.
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove author data'
      description: 'Remove the specified resource from storage.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'Author ID.'
        required: true
        example: 2
        type: integer
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
               "author": {
                   "id": 2,
                   "name": "Robert P.",
                   "dob": "1960-12-23",
                   "description": "This is my new dummy description",
                   "created_at": "2023-02-24T03:06:51.000000Z",
                   "updated_at": "2023-02-24T03:06:51.000000Z"
               },
               "message": "Author has been deleted."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
